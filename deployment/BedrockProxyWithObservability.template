Description: Bedrock Access Gateway - OpenAI-compatible RESTful APIs for Amazon Bedrock

Mappings:
  ELBAccountIdMap:
    us-east-1:
      AccountId: '127311923021'  # US East (N. Virginia)
    us-east-2:
      AccountId: '033677994240'  # US East (Ohio)
    us-west-1:
      AccountId: '027434742980'  # US West (N. California)
    us-west-2:
      AccountId: '797873946194'  # US West (Oregon)
    af-south-1:
      AccountId: '098369216593'  # Africa (Cape Town)
    ap-east-1:
      AccountId: '754344448648'  # Asia Pacific (Hong Kong)
    ap-south-2:
      AccountId: '589379963580'  # Asia Pacific (Jakarta)
    ap-south-1:
      AccountId: '718504428378'  # Asia Pacific (Mumbai)
    ap-northeast-3:
      AccountId: '383597477331'  # Asia Pacific (Osaka)
    ap-northeast-2:
      AccountId: '600734575887'  # Asia Pacific (Seoul)
    ap-southeast-1:
      AccountId: '114774131450'  # Asia Pacific (Singapore)
    ap-southeast-2:
      AccountId: '783225319266'  # Asia Pacific (Sydney)
    ap-northeast-1:
      AccountId: '582318560864'  # Asia Pacific (Tokyo)
    ca-central-1:
      AccountId: '985666609251'  # Canada (Central)
    eu-central-1:
      AccountId: '054676820928'  # Europe (Frankfurt)
    eu-west-1:
      AccountId: '156460612806'  # Europe (Ireland)
    eu-west-2:
      AccountId: '652711504416'  # Europe (London)
    eu-south-1:
      AccountId: '635631232127'  # Europe (Milan)
    eu-west-3:
      AccountId: '009996457667'  # Europe (Paris)
    eu-north-1:
      AccountId: '897822967062'  # Europe (Stockholm)
    me-south-1:
      AccountId: '076674570225'  # Middle East (Bahrain)
    sa-east-1:
      AccountId: '507241528517'  # South America (SÃ£o Paulo)
Parameters:
  ApiKeySecretArn:
    Type: String
    AllowedPattern: ^arn:aws:secretsmanager:.*$
    Description: The secret ARN in Secrets Manager used to store the API Key
  DefaultModelId:
    Type: String
    Default: anthropic.claude-3-sonnet-20240229-v1:0
    Description: The default model ID, please make sure the model ID is supported in the current region
  EnableALBAccessLogging:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Enable access logging for the Application Load Balancer (ALB). Access logs capture detailed information about requests sent to the ALB, which can be useful for troubleshooting and monitoring purposes.
  EnableCloudWatchAlarms:
    Type: String
    Default: false
    AllowedValues:
      - true
      - false
    Description: Enable CloudWatch alarms for monitoring the Lambda function. If enabled, you must provide an SNS topic ARN to receive alarm notifications.
  SNSTopicArn:
    Type: String
    Default: ''
    Description: The ARN of the SNS topic to receive CloudWatch alarm notifications. Required if EnableCloudWatchAlarms is set to 'true'.

Conditions:
  EnableALBAccessLogging: !Equals [!Ref EnableALBAccessLogging, 'true']
  EnableCloudWatchAlarms: !And
    - !Equals [!Ref EnableCloudWatchAlarms, 'true'] 
    - !Not [!Equals [!Ref SNSTopicArn, '']]
Resources:
  ALBAccessLogBucket:
    Type: AWS::S3::Bucket
    Condition: EnableALBAccessLogging
    Properties:
      BucketName: !Sub '${AWS::AccountId}-${AWS::Region}-${AWS::StackName}-alb-logs'
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldLogs
            Status: Enabled
            ExpirationInDays: 30

  ALBAccessLogBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: EnableALBAccessLogging
    Properties:
      Bucket: !Ref ALBAccessLogBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: ALBAccessLogBucketPermissions
            Effect: Allow
            Principal:
              AWS: !Sub
                - 'arn:aws:iam::${ELBAccountId}:root'
                - ELBAccountId: !FindInMap [ELBAccountIdMap, !Ref 'AWS::Region', 'AccountId']
            Action: 's3:PutObject'
            Resource: !Sub 'arn:aws:s3:::${AWS::AccountId}-${AWS::Region}-${AWS::StackName}-alb-logs/*'
  VPCB9E5F0B4:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.250.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: BedrockProxy/VPC 
  VPCPublicSubnet1SubnetB4246D30:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 0
          - Fn::GetAZs: ""
      CidrBlock: 10.250.0.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: BedrockProxy/VPC/PublicSubnet1
      VpcId:
        Ref: VPCB9E5F0B4
  VPCPublicSubnet1RouteTableFEE4B781:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BedrockProxy/VPC/PublicSubnet1
      VpcId:
        Ref: VPCB9E5F0B4
  VPCPublicSubnet1RouteTableAssociation0B0896DC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
      SubnetId:
        Ref: VPCPublicSubnet1SubnetB4246D30
  VPCPublicSubnet1DefaultRoute91CEF279:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
      RouteTableId:
        Ref: VPCPublicSubnet1RouteTableFEE4B781
    DependsOn:
      - VPCVPCGW99B986DC
  VPCPublicSubnet2Subnet74179F39:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
          - 1
          - Fn::GetAZs: ""
      CidrBlock: 10.250.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: aws-cdk:subnet-name
          Value: Public
        - Key: aws-cdk:subnet-type
          Value: Public
        - Key: Name
          Value: BedrockProxy/VPC/PublicSubnet2
      VpcId:
        Ref: VPCB9E5F0B4
  VPCPublicSubnet2RouteTable6F1A15F1:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: BedrockProxy/VPC/PublicSubnet2
      VpcId:
        Ref: VPCB9E5F0B4
  VPCPublicSubnet2RouteTableAssociation5A808732:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
      SubnetId:
        Ref: VPCPublicSubnet2Subnet74179F39
  VPCPublicSubnet2DefaultRouteB7481BBA:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: VPCIGWB7E252D3
      RouteTableId:
        Ref: VPCPublicSubnet2RouteTable6F1A15F1
    DependsOn:
      - VPCVPCGW99B986DC
  VPCIGWB7E252D3:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: BedrockProxy/VPC
  VPCVPCGW99B986DC:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId:
        Ref: VPCIGWB7E252D3
      VpcId:
        Ref: VPCB9E5F0B4
  ProxyApiHandlerServiceRoleDefaultPolicy86681202:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - bedrock:ListFoundationModels
              - bedrock:ListInferenceProfiles
            Effect: Allow
            Resource: "*"
          - Action:
              - bedrock:InvokeModel
              - bedrock:InvokeModelWithResponseStream
            Effect: Allow
            Resource:
              - arn:aws:bedrock:*::foundation-model/*
              - arn:aws:bedrock:*:*:inference-profile/*
          - Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Effect: Allow
            Resource:
              Ref: ApiKeySecretArn
        Version: "2012-10-17"
      PolicyName: ProxyApiHandlerServiceRoleDefaultPolicy86681202
      Roles:
        - Ref: ProxyApiHandlerServiceRoleBE71BFB1
  ProxyApiHandlerEC15A492:
    Type: AWS::Lambda::Function
    Properties:
      Architectures:
        - arm64
      Code:
        ImageUri:
          Fn::Join:
            - ""
            - - 366590864501.dkr.ecr.
              - Ref: AWS::Region
              - "."
              - Ref: AWS::URLSuffix
              - /bedrock-proxy-api:latest
      Description: Bedrock Proxy API Handler
      Environment:
        Variables:
          DEBUG: "false"
          API_KEY_SECRET_ARN:
            Ref: ApiKeySecretArn
          DEFAULT_MODEL:
            Ref: DefaultModelId
          DEFAULT_EMBEDDING_MODEL: cohere.embed-multilingual-v3
          ENABLE_CROSS_REGION_INFERENCE: "true"
      MemorySize: 1024
      PackageType: Image
      Role:
        Fn::GetAtt:
          - ProxyApiHandlerServiceRoleBE71BFB1
          - Arn
      Timeout: 600
    DependsOn:
      - ProxyApiHandlerServiceRoleDefaultPolicy86681202
      - ProxyApiHandlerServiceRoleBE71BFB1

  ProxyApiHandlerServiceRoleBE71BFB1:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  ProxyApiHandlerInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HYF6C33779:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ProxyApiHandlerEC15A492
          - Arn
      Principal: elasticloadbalancing.amazonaws.com
  ProxyALB87756780:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      LoadBalancerAttributes:
        - Key: deletion_protection.enabled
          Value: false
        - Key: idle_timeout.timeout_seconds
          Value: 600
        - !If
          - EnableALBAccessLogging
          - Key: access_logs.s3.enabled
            Value: true
          - !Ref AWS::NoValue
        - !If
          - EnableALBAccessLogging
          - Key: access_logs.s3.bucket
            Value: !Ref ALBAccessLogBucket
          - !Ref AWS::NoValue
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ProxyALBSecurityGroup0D6CA3DA
      Subnets:
        - !Ref VPCPublicSubnet1SubnetB4246D30
        - !Ref VPCPublicSubnet2Subnet74179F39
      Type: application
    DependsOn:
      - VPCPublicSubnet1DefaultRoute91CEF279
      - VPCPublicSubnet1RouteTableAssociation0B0896DC
      - VPCPublicSubnet2DefaultRouteB7481BBA
      - VPCPublicSubnet2RouteTableAssociation5A808732

  ProxyALBSecurityGroup0D6CA3DA:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Automatically created Security Group for ELB BedrockProxyALB1CE4CAD1
      SecurityGroupEgress:
        - CidrIp: 255.255.255.255/32
          Description: Disallow all traffic
          FromPort: 252
          IpProtocol: icmp
          ToPort: 86
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          Description: Allow from anyone on port 80
          FromPort: 80
          IpProtocol: tcp
          ToPort: 80
      VpcId:
        Ref: VPCB9E5F0B4
  ProxyALBListener933E9515:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - TargetGroupArn:
            Ref: ProxyALBListenerTargetsGroup187739FA
          Type: forward
      LoadBalancerArn:
        Ref: ProxyALB87756780
      Port: 80
      Protocol: HTTP
  ProxyALBListenerTargetsGroup187739FA:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckEnabled: false
      TargetType: lambda
      Targets:
        - Id:
            Fn::GetAtt:
              - ProxyApiHandlerEC15A492
              - Arn
    DependsOn:
      - ProxyApiHandlerInvoke2UTWxhlfyqbT5FTn5jvgbLgjFfJwzswGk55DU1HYF6C33779
  ProxyThrottlesAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: EnableCloudWatchAlarms
    Properties:
      AlarmDescription: Alarm if Lambda function is being throttled
      Namespace: AWS/Lambda
      MetricName: Throttles
      Dimensions:
        - Name: FunctionName
          Value: !Ref ProxyApiHandlerEC15A492
        - Name: Resource
          Value: !Ref ProxyApiHandlerEC15A492
      Statistic: Sum
      Period: 60
      EvaluationPeriods: 1
      Threshold: 1
      ComparisonOperator: GreaterThanThreshold
      AlarmActions:
        - !Ref SNSTopicArn
      TreatMissingData: notBreaching

Outputs:
  APIBaseUrl:
    Description: Proxy API Base URL (OPENAI_API_BASE)
    Value:
      Fn::Join:
        - ""
        - - http://
          - Fn::GetAtt:
              - ProxyALB87756780
              - DNSName
          - /api/v1
